#+Title: The Plan
* Overview
* Priority
** TODO [#A] Update project to use the new name of biddy
** TODO [#A] Refactor
** TODO [#B] Create a path and tracked file based "package management"
The motivation behind this is the ability to selectively pull and
update files.
Any complexity at all is a Resistance to getting started with this
system, so it should prefer simple text files and json formats to get
the job done.

As a bonus the user could be offered a basic Lua API to extent a file
however they see fit, and run custom scripts.
Although bash or python make sense for this kind of thing, none can be
assumed to be present on the users system, and given the json like
object structure Lua has an the teeny tiny install, it makes a good
fit.

Another bonus would be generating a skeleton "package" based on some
file paths and folders. This would be useful for setting up system
agnostic files, where biddy can guess where it should be.

* Backburner
** TODO Create a method of quickly operating on files in "input" directories
This is intended to be an elegant solution to quickly performing
maintenance on the system instead of painstakingly running commands on
individual or even globbed files periodically.

For example you could be presented with a picture, and asked, would
you like to s(save it), t(trash it), o(optimize the image as a png),.

Or, you could specify something like a kind of file "type", where one
may .bmp file could be instructed to be optimized and moved to a photo
folder, and another could be lossy compressed and moved to a discard
folder with 1 keypress.

** TODO Write custom filesystem functions to make sure biddy logs its own changes
too.
It would be horribly ironic if this were not the case.
** TODO Create a timer and file hook to auto-manage files on any system
The motivation for this is a this tool won't assume you have sysadmin
privileges or ability to access even local contrams and fanotify for
example.
So the project should be able to do it by itself, with optional cron support.
